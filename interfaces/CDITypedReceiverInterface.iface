<?php

/**
 * Represents a receiver that has a type. All dataobject and datatype receivers
 * should implement this interface.
 */
interface CDITypedReceiverInterface extends CDIReceiverInterface {
  
  /**
   * Returns a list of supported data type names (eg values returned by 
   * CDIDataTypeInterface::getDataTypeName()).
   * 
   * @return array
   *   An array of strings which represent data type names.
   */
  function supportedTypes();
  
  /**
   * Allows for further, receiver-specific validation of the data type and
   * command class, that it can process items of that type and command.
   * 
   * @param CDIDataTypeInterface $dataType
   *   The data type to validate.
   * @param string $commandClass
   *   The command class being used.
   * 
   * @return boolean
   *   TRUE if the item can be processed, otherwise false.
   */
  function validateDataType(CDIDataTypeInterface $dataType, $commandClass);
  
}