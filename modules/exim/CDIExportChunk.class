<?php

class CDIExportChunk implements Serializable {
  
  private $dataType;
  private $exportData;
  
  public function __construct(CDIDataTypeInterface $dataType, array $exportData) {
    $this->dataType = $dataType;
    $this->exportData = $exportData;
  }
  
  public function pack() {
    return $this->serialize();
  }
  
  public function serialize() {
    return serialize(array(
      'datatype' => $this->dataType,
      'exportData' => $this->exportData,
    ));
  }
  
  public function unserialize($data) {
    $unpacked = unserialize($data);
    $this->dataType = $unpacked['datatype'];
    $this->exportData = $unpacked['exportData'];
  }
  
  public function getDataType() {
    return $this->dataType;
  }
  
  public function getExportData() {
    return $this->exportData;
  }
  
  public function import() {
    return $this->dataType->facade(CDI_COMMAND_IMPORT)->import($this);
  }
  
  public static function unpack($string) {
    $data = unserialize($string);
    return new CDIExportChunk($data['datatype'], $data['exportData']);
  }
  
}
