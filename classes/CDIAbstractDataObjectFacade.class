<?php

/**
 * A base facade for a data object, implementing many of the common methods 
 * for them. Most data object facades will want to extend from this class.
 */
abstract class CDIAbstractDataObjectFacade extends CDIAbstractData implements CDIDataObjectFacadeInterface {
  
  /**
   * The data object we have build a facade around.
   * @var type 
   */
  private $object = NULL;
  
  /**
   * A constructor for facades. 
   * 
   * @param CDIDataObjectInterface $dataObject
   *   The data object to wrap.
   */
  public function __construct(CDIDataObjectInterface $dataObject) {
    $this->object = $dataObject;
  }
  
  public function getDataType() {
    return $this->object->getDataType();
  }
  
  public function facade($facadeType) {
    return parent::buildFacade($facadeType, array(
      'CDIDataObjectFacadeInterface',
      'CDIDataTypeFacadeInterface',
    ), $this);
  }
  
  public function getRawValue($key) {
    return $this->object->getRawValue($key);
  }
  
  public function setRawValue($key, $value) {
    $this->object->setRawValue($key, $value);
  }
  
  public function strip() {
    return $this->object;
  }
  
  public function fireCommand(CDITypedCommandInterface $command) {
    $this->object->fireCommand($command);
  }
  
  public function checkSupport() {
    return CDI::getCommandRegistry()->checkFacadeSupport($this, $this->object);
  }
  
}