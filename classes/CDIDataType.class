<?php

/**
 * Default implementation of a data type.
 * 
 * This should be good enough for most cases.
 */
class CDIDataType extends CDIAbstractData implements CDIDataTypeInterface {
  
  /**
   * The name of the data type.
   * 
   * @var string
   */
  private $typeName;
  
  /**
   * Constructor.
   * 
   * @param string $typeName
   *   The name of the data type.
   */
  public function __construct($typeName) {
    $this->typeName = $typeName;
  }
  
  public function getDataTypeName() {
    return $this->typeName;
  }
  
  public function facade($facadeType) {
    return parent::buildFacade($facadeType, 'CDIDataTypeFacadeInterface', $this);
  }
  
  public function fireCommand(CDIDataTypeCommandInterface $command) {
    $command->setDataType($this);
    parent::fireGenericCommand($command);
  }
  
  public function checkObjectSupport($facadeType) {
    // @todo: do we want a stub object creation?
    $do = new CDIDataObject($this);
    try {
      $facade = $do->facade($facadeType);
      return $facade->checkSupport();
    } catch (CDIException $e) {
      return FALSE;
    }
    return FALSE;
  }
  
}