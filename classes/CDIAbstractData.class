<?php

abstract class CDIAbstractData implements CDIDataInterface {
  
  function buildFacade($facadeType, $facadeInterface, $wrappedObject, $useShortcut = TRUE) {
    if ($useShortcut) {
      $actualType = CDI::getCommandRegistry()->findFacadeFromShortcut($facadeType);
      if (!empty($actualType)) {
        $facadeType = $actualType;
      }
    }
    $implements = class_implements($facadeType);
    if (!is_array($facadeInterface)) {
      $facadeInterface = array($facadeInterface);
    }
    foreach ($facadeInterface as $iface) {
      if (in_array($iface, $implements)) {
        return new $facadeType($wrappedObject);
      }
    }
    throw new CDIException('CDI-1002', 'Unable to build facade');
  }
  
  function fireGenericCommand(CDICommandInterface $command) {
    CDI::getRegistry()->fireCommand($command);
  }
  
}
